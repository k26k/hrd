
JAVA

Object 클래스 메소드
- hashCode(Object obj)
  기본은 객체 메모리 값의 해시 코드를 반환함
- equals()
  객체의 해시 코드 값이 같은지 비교함
  그래서 equals()을 재정의 하면 hashCode()도 재정의 해줘야함
- toString()
  객체의 값을 스트링으로 반환함 기본타입 객체는 변수값 반환 참조타입 객체는 메모리주소 반환, 재정의해서 변경 가능
- clone()
  객체의 데이터만 복사함

System
- exit(0) = 프로그램 종료
- currentTimeMills() = UTC 1970년 1월 1일 00:00:00.000와 현재 시간의 차이를 long형으로 반환한다.
- nonoTime() = JVM의 시간 소스의 현재 값을 long타입으로 나노세컨드(1/1000000000초)를 반환한다.

String 클래스
- Char



SQL

-- table 생성 
CREATE TABLE 테이블명(
    자료 자료형
);

-- table 자료 삽입
INSERT INTO book VALUES(자료);

-- table 전체 조회
SELECT * FROM 테이블명;

-- table 열조건 조회
SELECT 열조건 
FROM 테이블명;

-- table 행조건 조회
SELECT *
FROM 테이블명
WHERE 행조건;

-- table 특정 데이터 조회
SELECT 열조건 
FROM 테이블명
WHERE 행조건;

-- 중복을 제외한 table 열조건 조회 (중복 제거 - DISTINCT)
SELECT DISTINCT 열조건 FROM 테이블명

-- 조건절 WHERE 사용

--가격이 20000원 미만인 도서 검색
SELECT *
FROM 테이블명
WHERE 조건문;

-- 범위 : BETWEEN 최소 AND 최대
SELECT *
FROM 테이블명
WHERE 행조건 BETWEEN 최소값 AND 최대값;

-- 아래와 같음
SELECT *
FROM 테이블명
WHERE 최소값 <= 행조건 AND 행조건 <= 최대값;

-- IN()
-- ㄱ조건, ㄴ조건 합연산 검색
SELECT *
FROM 테이블명
WHERE 행조건 IN(ㄱ, ㄴ);

-- 아래와 같음
SELECT *
FROM 테이블명
WHERE 행조건 = ㄱ OR 행조건 = ㄴ;

-- ㄱ조건, ㄴ조건 낫연산  도서를 검색
SELECT *
FROM 테이블명
WHERE 행조건 NOT IN(ㄱ, ㄴ);

-- LIKE 연산자 
-- '축구의 역사'를 출간한 출판사 검색
SELECT bookname, publisher
FROM 테이블명
WHERE bookname LIKE '축구의 역사';

-- 특정 단어 검색가 포함된 자료 검색
-- '단어%' = 시작 단어
-- '%단어' = 끝 단어
-- '%단어%' = 포함 단어
SELECT 열조건
FROM 테이블명
WHERE 행조건 LIKE '%단어%';

-- 최저값 이상인 도서 검색
SELECT *
FROM 테이블명
WHERE bookname LIKE '%축구%' AND 20000 <= price;

-- 정렬하면서 검색
-- ORDER BY
-- 도서를 이름순으로 검색
SELECT *
FROM 테이블명
ORDER BY bookname;

-- 도서를 가격순으로 가격이 같으면 이름순으로 검색
SELECT *
FROM 테이블명
ORDER BY price, bookname;

-- ㄱ 내림차순 같으면 ㄴ 오름차순 검색
SELECT *
FROM 테이블명
ORDER BY ㄱ DESC, ㄴ ASC;




JAVA Oracle DB 연결
- java project에 lib 폴더 생성
- C:\app\guro-hi\product\21c\dbhomeXE\jdbc\lib에 있는 ojdbc11.jar 복사 붙여넣기
- ojdbc11.jar 우클릭 Build Path 클릭 추가
- Connection 클라스 생성
- 






